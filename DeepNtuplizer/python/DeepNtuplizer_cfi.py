import FWCore.ParameterSet.Config as cms

deepntuplizer = cms.EDAnalyzer("DeepNtuplizer",
    pruned               = cms.InputTag("prunedGenParticles"),
    genT0Tag             = cms.InputTag("genParticles", "t0", "HLT"),
    candidates           = cms.InputTag("packedPFCandidates"),
    muons                = cms.InputTag("slimmedMuons"),
    electrons            = cms.InputTag("slimmedElectrons"),
    vertices             = cms.InputTag("offlineSlimmedPrimaryVertices"),
    SVs                  = cms.InputTag("slimmedSecondaryVertices"),
    # LooseSVs             = cms.InputTag("inclusiveCandidateSecondaryVertices"),
    genJetMatchWithNu    = cms.InputTag("patGenJetMatchWithNu"),
    genJetMatchRecluster = cms.InputTag("patGenJetMatchRecluster"),
    jets                 = cms.InputTag("slimmedJets"),
    pixelhit             = cms.InputTag("slimmedJets", "tagInfos"),
    tagInfoName          = cms.string("deepNN"),
    bDiscriminators      = cms.vstring(),
    qgtagger             = cms.string("QGTagger"),
    fatjets              = cms.InputTag("slimmedJetsAK8"),
    tagInfoFName         = cms.string("pfBoostedDoubleSVAK8"),
    rhoInfo              = cms.InputTag("fixedGridRhoFastjetAll"),
    pupInfo              = cms.InputTag("slimmedAddPileupInfo"),
    absEtaMin            = cms.double(0.0),
    absEtaMax            = cms.double(4.0),
    genPartPtCut         = cms.double(10.0),
    genDauPtCut          = cms.double(1.0),
    minCandidatePt       = cms.double(0.95),
    trackPtCut           = cms.double(0.8),
    timeQualityCut       = cms.double(0.5),
    matchGVdR            = cms.double(0.1),
    jetR                 = cms.double(0.4),
    jetPtMin             = cms.double(20.0),
    jetPtMax             = cms.double(1000.0),
    genJetMatchdR        = cms.double(0.1),
    gluonReduction       = cms.double(0.0),
    runFatJet            = cms.bool(False),
    useHerwigCompatible  = cms.bool(False),
    isHerwig             = cms.bool(False),
    useOffsets           = cms.bool(True),
    debug                = cms.bool(False),
    applySelection       = cms.bool(True)
)
